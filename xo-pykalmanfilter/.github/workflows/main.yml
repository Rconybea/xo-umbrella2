name: build xo-optionutil + dependencies

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: checkout source
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        echo "::group::install catch2"
        # install catch2.  see
        #   [[https://stackoverflow.com/questions/57982945/how-to-apt-get-install-in-a-github-actions-workflow]]
        sudo apt-get install -y catch2
        echo "::endgroup"

        echo "::group::install eigen3"
        sudo apt-get install  -y libeigen3-dev
        echo "::endgroup"

        echo "::group::install pybind11"
        sudo apt-get install -y pybind11-dev
        #echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-cmake
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-cmake
        path: repo/xo-cmake

    - name: build xo-cmake
      run: |
        XONAME=xo-cmake
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}}
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-indentlog
      uses: actions/checkout@v3
      with:
        repository: Rconybea/indentlog
        path: repo/xo-indentlog

    - name: build xo-indentlog
      run: |
        XONAME=xo-indentlog
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-refcnt
      uses: actions/checkout@v3
      with:
        repository: Rconybea/refcnt
        path: repo/xo-refcnt

    - name: build xo-refcnt
      run: |
        XONAME=xo-refcnt
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-subsys
      uses: actions/checkout@v3
      with:
        repository: Rconybea/subsys
        path: repo/xo-subsys

    - name: build xo-subsys
      run: |
        XONAME=xo-subsys
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-reflect
      uses: actions/checkout@v3
      with:
        repository: Rconybea/reflect
        path: repo/xo-reflect

    - name: build xo-reflect
      run: |
        XONAME=xo-reflect
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-pyutil
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-pyutil
        path: repo/xo-pyutil

    - name: build xo-pyutil
      run: |
        XONAME=xo-pyutil
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-pyreflect
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-pyreflect
        path: repo/xo-pyreflect

    - name: build xo-pyreflect
      run: |
        XONAME=xo-pyreflect
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-callback
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-callback
        path: repo/xo-callback

    - name: build xo-callback
      run: |
        XONAME=xo-callback
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-printjson
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-printjson
        path: repo/xo-printjson

    - name: build xo-printjson
      run: |
        XONAME=xo-printjson
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-pyprintjson
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-pyprintjson
        path: repo/xo-pyprintjson

    - name: build xo-pyprintjson
      run: |
        XONAME=xo-pyprintjson
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-webutil
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-webutil
        path: repo/xo-webutil

    - name: build xo-webutil
      run: |
        XONAME=xo-webutil
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-randomgen
      uses: actions/checkout@v3
      with:
        repository: Rconybea/randomgen
        path: repo/xo-randomgen

    - name: build xo-randomgen
      run: |
        XONAME=xo-randomgen
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-ordinaltree
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-ordinaltree
        path: repo/xo-ordinaltree

    - name: build xo-ordinaltree
      run: |
        XONAME=xo-ordinaltree
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-reactor
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-reactor
        path: repo/xo-reactor

    - name: build xo-reactor
      run: |
        XONAME=xo-reactor
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-pyreactor
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-pyreactor
        path: repo/xo-pyreactor

    - name: build xo-pyreactor
      run: |
        XONAME=xo-pyreactor
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-statistics
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-statistics
        path: repo/xo-statistics

    - name: build xo-statistics
      run: |
        XONAME=xo-statistics
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: clone xo-kalmanfilter
      uses: actions/checkout@v3
      with:
        repository: Rconybea/xo-kalmanfilter
        path: repo/xo-kalmanfilter

    - name: build xo-kalmanfilter
      run: |
        XONAME=xo-kalmanfilter
        XOSRC=repo/${XONAME}
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_INSTALL_PREFIX=${PREFIX} ${XOSRC}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}} -j
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

    # ----------------------------------------------------------------

    - name: Configure self (pykalmanfilter)
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        XONAME=xo-pykalmanfilter
        BUILDDIR=${{github.workspace}}/build_${XONAME}
        PREFIX=${{github.workspace}}/local

        echo "::group::repo dir tree"
        tree -L 2 repo
        echo "::endgroup"

        echo "::group::configure ${XONAME}"
        cmake -B ${BUILDDIR} -DCMAKE_MODULE_PATH=${PREFIX}/share/cmake -DCMAKE_PREFIX_PATH=${PREFIX} -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        echo "::endgroup"

        echo "::group::compile ${XONAME}"
        cmake --build ${BUILDDIR} --config ${{env.BUILD_TYPE}}
        echo "::endgroup"

        echo "::group::local install ${XONAME}"
        cmake --install ${BUILDDIR}
        echo "::endgroup"

        echo "::group::local dir tree"
        tree -L 3 ${PREFIX}
        echo "::endgroup"

        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        (cd ${BUILDDIR} && ctest -C ${{env.BUILD_TYPE}})
